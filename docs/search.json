[{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"what-are-multivariate-outliers-how-do-you-detect-them","dir":"Articles","previous_headings":"","what":"What are multivariate outliers? How do you detect them?","title":"Multivariate","text":"multivariate outlier outlier can detected looking two variables combination. graph shows examples multivariate outliers using iris dataset included base R.  red point labelled 1 graph clear example multivariate outlier. flower Sepal Length 4.9 inches, Petal Width 1.7 inches, seem like normal values Sepal Length Petal Width. However, flowers Sepal Length around 5 inches normally much smaller Petal Widths, shown graph . outliers dataset, outlier colored red draw extra attention . outlier graph detected using LoF method, detail method can provided . package specifically focuses four different methods finding multivariate outliers: kNN, LoF, mahalanobis distance, iForest.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"knn","dir":"Articles","previous_headings":"","what":"kNN","title":"Multivariate","text":"kNN calculates distances data point k-nearest neighbors assigns outlier score based distance. principle guides kNN outliers lay far away neighbours, distances interpreted within context. variables data may much larger ranges others (ex. variable range 1-10 another range -10000 10000), data standardized calculating distances. distances calculated, mean row calculated. next step involves creating threshold declaring point outlier. calculate threshold, function takes mean row (row’s mean calculated), adds 2 times standard deviation row number. Outliers considered points score calculated threshold. method relies numeric variables, categorical variables removed. example final output multiOutliers function using kNN method.","code":"#>  #> Method: kNN #> Dataset: mtcarsOutliers #> Variables: mpg disp hp drat wt qsec #> Row: 1 3 16 #> Outlier Score: 389.3906 557.6478 403.178 #> Message:  Outliers detected #> Option 1 : k = 5 #>  #> Five Largest Outliers Within the Provided Dataset: #>                      mpg      disp        hp drat       wt  qsec   scores #> Datsun 710          22.8 -468.2171   93.0000 3.85 13.16772 18.61 557.6478 #> Lincoln Continental 10.4  460.0000 -232.3693 3.00  5.42400 17.82 403.1780 #> Mazda RX4           21.0  782.5020  110.0000 3.90  2.62000 16.46 389.3906 #> Honda Civic         30.4   75.7000 -240.5539 4.93  1.61500 18.52 312.8635 #> Maserati Bora       15.0  301.0000  335.0000 3.54  3.57000 14.60 122.3927"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"customizing-the-k-parameter","dir":"Articles","previous_headings":"kNN","what":"Customizing the k parameter","title":"Multivariate","text":"value k tells function many points consider neighbors identifying distances points. default value, 5, finds distance point 5 points closest point. choice k significantly impacts results, smaller values generally sensitive outliers. can supply value k, may change results function.","code":"multiOutliers(mtcarsOutliers, method = \"knn\", k = 10) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: kNN #> Dataset: mtcarsOutliers #> Variables: mpg disp hp drat wt qsec #> Row: 1 3 16 #> Outlier Score: 427.538 581.0315 416.7779 #> Message:  Outliers detected #> Option 1 : k = 10 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                      mpg      disp        hp drat       wt  qsec   scores #> Datsun 710          22.8 -468.2171   93.0000 3.85 13.16772 18.61 581.0315 #> Mazda RX4           21.0  782.5020  110.0000 3.90  2.62000 16.46 427.5380 #> Lincoln Continental 10.4  460.0000 -232.3693 3.00  5.42400 17.82 416.7779 #> Honda Civic         30.4   75.7000 -240.5539 4.93  1.61500 18.52 331.5026 #> Maserati Bora       15.0  301.0000  335.0000 3.54  3.57000 14.60 148.4708"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"example-output","dir":"Articles","previous_headings":"kNN","what":"Example Output","title":"Multivariate","text":"using kNN method default k=5, function returns: Method: “kNN”, indicating method used. Dataset: dataset name. Variables: numeric columns considered outlier detection. Row: Indices rows identified outliers. Score: Mean kNN distance scores detected outliers. Message: summary message indicating whether outliers detected. k: number nearest neighbors considered. Data: Displays five highest outliers data used. example graphical output function.","code":"result <- multiOutliers(mtcarsOutliers, method = \"knn\") print(result) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: kNN #> Dataset: mtcarsOutliers #> Variables: mpg disp hp drat wt qsec #> Row: 1 3 16 #> Outlier Score: 389.3906 557.6478 403.178 #> Message:  Outliers detected #> Option 1 : k = 5 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                      mpg      disp        hp drat       wt  qsec   scores #> Datsun 710          22.8 -468.2171   93.0000 3.85 13.16772 18.61 557.6478 #> Lincoln Continental 10.4  460.0000 -232.3693 3.00  5.42400 17.82 403.1780 #> Mazda RX4           21.0  782.5020  110.0000 3.90  2.62000 16.46 389.3906 #> Honda Civic         30.4   75.7000 -240.5539 4.93  1.61500 18.52 312.8635 #> Maserati Bora       15.0  301.0000  335.0000 3.54  3.57000 14.60 122.3927 plot(result)"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"notes-and-considerations","dir":"Articles","previous_headings":"kNN","what":"Notes and Considerations","title":"Multivariate","text":"Numeric Data : kNN method requires numeric variables. Non-numeric columns automatically excluded. Robustness: kNN assume specific distribution data, robust non-normality, making better tool handle non-normal data outlier detection methods. learn kNN ’s used multivariate outlier detection, visit resources: GeeksforGeeks.com Dualitytech.com StatQuest","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"local-outlier-factor-lof","dir":"Articles","previous_headings":"","what":"Local outlier factor (LoF)","title":"Multivariate","text":"Local Outlier Factor (LoF) method detects anomalies comparing density data points local neighborhood. Points significantly lower density neighbors flagged potential outliers. dbscan package used implementation, calculates LoF scores data point. Scores certain threshold (typically > 1) indicative stronger outliers. LoF particularly useful datasets clusters varying density, considers local density assessing outlier scores. supports numeric categorical variables, using Gower distance mixed data types. LoF method uses cluster package’s daisy (Dissimilarity Matrix Calculation) function calculate Gower distance necessary.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"customizing-the-minpts-parameter","dir":"Articles","previous_headings":"Local outlier factor (LoF)","what":"Customizing the minPts Parameter","title":"Multivariate","text":"LoF method allows customization minPts parameter, minimum number points local neighborhood. Larger values result broader neighborhoods may reduce sensitivity smaller clusters. minPts defaults 5 specified. can adjust parameters suit dataset. ’s example:","code":"multiOutliers(mtcarsOutliers, method = \"lof\", minPts = 10) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: LoF #> Dataset: mtcarsOutliers #> Variables: mpg cyl disp hp drat wt qsec vs am gear carb #> Row: 1 2 3 4 6 7 10 11 15 16 17 20 24 26 27 29 30 31 32 #> Outlier Score: 1.234384 1.109279 1.052523 1.434807 1.590262 1.031151 1.000967 1.002118 1.004441 1.2053 1.015402 1.013044 1.088952 1.002205 1.043699 1.419062 1.752452 1.94842 1.017775 #> Message:  Outliers detected #> Option 1 : minPts = 10 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                     mpg cyl disp  hp      drat    wt  qsec vs am gear carb #> Maserati Bora  15.00000   8  301 335  3.540000 3.570 14.60  0  1    5    8 #> Ferrari Dino   19.70000   6  145 175 -5.146597 2.770 15.50  0  1    5    6 #> Valiant        18.10000   6  225 105  2.760000 3.460 20.22  1  0    3    1 #> Hornet 4 Drive 54.27716   6  258 110  3.080000 3.215 19.44  1  0    3    1 #> Ford Pantera L 15.80000   8  351 264  4.220000 3.170 14.50  0  1    5    4 #>                  scores #> Maserati Bora  1.948420 #> Ferrari Dino   1.752452 #> Valiant        1.590262 #> Hornet 4 Drive 1.434807 #> Ford Pantera L 1.419062"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"example-output-1","dir":"Articles","previous_headings":"Local outlier factor (LoF)","what":"Example Output","title":"Multivariate","text":"using LoF method default minPts = 5, function returns: Method: “LoF”, indicating method used. Dataset: dataset name. Variables: columns considered analysis. Row: Indices rows identified outliers. Score: LoF scores detected outlier. Message: summary message indicating whether outliers detected. minPts: parameter value used local neighborhood. Data: Displays five highest outliers data used. example graphical output function.","code":"result <- multiOutliers(mtcarsOutliers, method = \"lof\") result #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: LoF #> Dataset: mtcarsOutliers #> Variables: mpg cyl disp hp drat wt qsec vs am gear carb #> Row: 1 2 3 4 6 7 10 11 15 16 17 20 24 26 27 29 30 31 32 #> Outlier Score: 1.234384 1.109279 1.052523 1.434807 1.590262 1.031151 1.000967 1.002118 1.004441 1.2053 1.015402 1.013044 1.088952 1.002205 1.043699 1.419062 1.752452 1.94842 1.017775 #> Message:  Outliers detected #> Option 1 : minPts = 10 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                     mpg cyl disp  hp      drat    wt  qsec vs am gear carb #> Maserati Bora  15.00000   8  301 335  3.540000 3.570 14.60  0  1    5    8 #> Ferrari Dino   19.70000   6  145 175 -5.146597 2.770 15.50  0  1    5    6 #> Valiant        18.10000   6  225 105  2.760000 3.460 20.22  1  0    3    1 #> Hornet 4 Drive 54.27716   6  258 110  3.080000 3.215 19.44  1  0    3    1 #> Ford Pantera L 15.80000   8  351 264  4.220000 3.170 14.50  0  1    5    4 #>                  scores #> Maserati Bora  1.948420 #> Ferrari Dino   1.752452 #> Valiant        1.590262 #> Hornet 4 Drive 1.434807 #> Ford Pantera L 1.419062 plot(result)"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"notes-and-considerations-1","dir":"Articles","previous_headings":"Local outlier factor (LoF)","what":"Notes and Considerations","title":"Multivariate","text":"Sensitivity minPts: choice minPts significantly influences results. value small might result -sensitivity, value large might overlook smaller clusters anomalies. Mixed Data Types: dataset contains categorical variables, method automatically switches Euclidean Gower distances calculating pairwise dissimilarities. Ensure data properly encoded. Interpreting LoF Scores: Scores greater 1.5 typically indicate potential outliers. Adjust threshold based characteristics dataset. learn LoF & Gower distance ’s used multivariate outlier detection, visit resources: Medium.com LoF Explained Gower Distance Gower Distance Explained DBSCAN Documentation","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"mahalanobis","dir":"Articles","previous_headings":"","what":"Mahalanobis","title":"Multivariate","text":"Mahalanobis distance measures distance point center multivariate distribution accounting correlation variables. method identifies outliers calculating far point data’s multivariate mean, considering covariance matrix data. approach particularly useful variables highly correlated different scales. using Mahalanobis distance, function automatically selects numeric columns dataset. Non-numeric variables excluded, ensuring compatibility method. distances calculated using outliers_mahalanobis function Routliers package. Mahalanobis distances returned function represent distance point center distribution.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"customizing-the-alpha-parameter","dir":"Articles","previous_headings":"Mahalanobis","what":"Customizing the alpha parameter","title":"Multivariate","text":"alpha parameter determines significance level outlier detection. default alpha value 0.1, corresponds 95% confidence level. function calculates chi-squared distribution points, removes distances outside 95% confidence interval range. Lower values (e.g., alpha = 0.01) result stricter thresholds, identifying fewer points outliers higher values less strict, identifying observations outliers. function return five observations largest outliers regardless value alpha. can modify alpha follows:","code":"multiOutliers(mtcarsOutliers, method = \"mahalanobis\", alpha = 0.01) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: mahalanobis #> Dataset: mtcarsOutliers #> Variables: mpg disp hp drat wt qsec #> Row: 3 9 16 30 #> Outlier Score: 21.23573 17.48584 17.54522 27.79833 #> Message:  Outliers detected #> Option 1 : alpha = 0.01 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                          mpg      disp        hp      drat       wt      qsec #> Ferrari Dino        19.70000  145.0000  175.0000 -5.146597  2.77000 15.500000 #> Datsun 710          22.80000 -468.2171   93.0000  3.850000 13.16772 18.610000 #> Lincoln Continental 10.40000  460.0000 -232.3693  3.000000  5.42400 17.820000 #> Merc 230            22.80000  140.8000   95.0000  3.920000  3.15000  3.655936 #> Hornet 4 Drive      54.27716  258.0000  110.0000  3.080000  3.21500 19.440000 #>                       scores #> Ferrari Dino        27.79833 #> Datsun 710          21.23573 #> Lincoln Continental 17.54522 #> Merc 230            17.48584 #> Hornet 4 Drive      12.96992"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"example-output-2","dir":"Articles","previous_headings":"Mahalanobis","what":"Example Output","title":"Multivariate","text":"using Mahalanobis method default alpha = 0.1, function returns: Method: “mahalanobis”, indicating method used. Dataset: dataset name. Variables: numeric columns considered. Row: Indices rows identified outliers. Score: Mahalanobis distance scores detected outliers. Message: summary message indicating whether outliers detected. Alpha: significance level used. Data: Displays five highest outliers data used. example graphical output function.","code":"result <- multiOutliers(mtcarsOutliers, method = \"mahalanobis\") print(result) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: mahalanobis #> Dataset: mtcarsOutliers #> Variables: mpg disp hp drat wt qsec #> Row: 3 4 9 16 19 20 24 30 #> Outlier Score: 21.23573 12.96992 17.48584 17.54522 11.54579 10.88054 11.19061 27.79833 #> Message:  Outliers detected #> Option 1 : alpha = 0.1 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                          mpg      disp        hp      drat       wt      qsec #> Ferrari Dino        19.70000  145.0000  175.0000 -5.146597  2.77000 15.500000 #> Datsun 710          22.80000 -468.2171   93.0000  3.850000 13.16772 18.610000 #> Lincoln Continental 10.40000  460.0000 -232.3693  3.000000  5.42400 17.820000 #> Merc 230            22.80000  140.8000   95.0000  3.920000  3.15000  3.655936 #> Hornet 4 Drive      54.27716  258.0000  110.0000  3.080000  3.21500 19.440000 #>                       scores #> Ferrari Dino        27.79833 #> Datsun 710          21.23573 #> Lincoln Continental 17.54522 #> Merc 230            17.48584 #> Hornet 4 Drive      12.96992 plot(result)"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"notes-and-considerations-2","dir":"Articles","previous_headings":"Mahalanobis","what":"Notes and Considerations","title":"Multivariate","text":"Numeric Data : Mahalanobis method requires numeric variables. Non-numeric columns automatically excluded. Multivariate Normality: method assumes data follows multivariate normal distribution. Deviations normality presence extreme outliers may affect results. learn Mahalanobis distance ’s used multivariate outlier detection, visit resources: Statisticshowto.com Mahalanobis Distance Explained Builtin.com","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"iforest","dir":"Articles","previous_headings":"","what":"iForest","title":"Multivariate","text":"Isolation Forest (iForest) unsupervised machine learning algorithm designed detect anomalies data implemented functions isotree package. works creating random partitions data measuring quickly point can isolated. Points isolated faster (using fewer splits) likely outliers. iForest algorithm particularly well-suited handling high-dimensional data works quantitative categorical variables. robust noise scales efficiently large datasets.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"customizing-parameters","dir":"Articles","previous_headings":"iForest","what":"Customizing Parameters","title":"Multivariate","text":"iForest method allows customization two main parameters: ntrees: number trees isolation forest. higher value increases precision also computation time. Default 100. n: number points return outliers. Default 5. ’s example can modify parameters:","code":"multiOutliers(mtcarsOutliers, method = \"iforest\", ntrees = 200, n = 10) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: iForest #> Dataset: mtcarsOutliers #> Variables: mpg cyl disp hp drat wt qsec vs am gear carb #> Row: 1 2 3 4 9 16 19 29 30 31 #> Outlier Score: 0.5888639 0.5495799 0.5468237 0.5310991 0.5296226 0.5276686 0.5254197 0.520464 0.5148695 0.4996576 #> Message:  Outliers detected #> Option 1 : ntrees = 200 #> Option 2 : n = 10 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                     mpg cyl      disp        hp      drat       wt  qsec vs am #> Ferrari Dino   19.70000   6  145.0000  175.0000 -5.146597  2.77000 15.50  0  1 #> Honda Civic    30.40000   4   75.7000 -240.5539  4.930000  1.61500 18.52  1  1 #> Datsun 710     22.80000   4 -468.2171   93.0000  3.850000 13.16772 18.61  1  1 #> Mazda RX4 Wag  52.22202   6  160.0000  110.0000  3.555697  2.87500 17.02  0  1 #> Hornet 4 Drive 54.27716   6  258.0000  110.0000  3.080000  3.21500 19.44  1  0 #>                gear carb    scores #> Ferrari Dino      5    6 0.5888639 #> Honda Civic       4    2 0.5495799 #> Datsun 710        4    1 0.5468237 #> Mazda RX4 Wag     4    4 0.5310991 #> Hornet 4 Drive    3    1 0.5296226"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"example-output-3","dir":"Articles","previous_headings":"iForest","what":"Example Output","title":"Multivariate","text":"using iForest method default ntrees = 100 n = 5 function returns: Method: “iForest”, indicating method used. Dataset: dataset name. Variables: numeric columns considered. Row: Indices rows identified outliers. Score: Isolation scores detected outlier. Message: summary message indicating whether outliers detected. ntrees: number trees isolation forest n: number points return outliers Data: Displays five highest outliers data used. example graphical output function.","code":"result <- multiOutliers(mtcarsOutliers, method = \"iforest\") result #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: iForest #> Dataset: mtcarsOutliers #> Variables: mpg cyl disp hp drat wt qsec vs am gear carb #> Row: 2 3 4 19 30 #> Outlier Score: 0.5771537 0.5524719 0.5426933 0.5410328 0.5378022 #> Message:  Outliers detected #> Option 1 : ntrees = 100 #> Option 2 : n = 5 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                     mpg cyl      disp        hp      drat       wt  qsec vs am #> Ferrari Dino   19.70000   6  145.0000  175.0000 -5.146597  2.77000 15.50  0  1 #> Datsun 710     22.80000   4 -468.2171   93.0000  3.850000 13.16772 18.61  1  1 #> Mazda RX4 Wag  52.22202   6  160.0000  110.0000  3.555697  2.87500 17.02  0  1 #> Honda Civic    30.40000   4   75.7000 -240.5539  4.930000  1.61500 18.52  1  1 #> Hornet 4 Drive 54.27716   6  258.0000  110.0000  3.080000  3.21500 19.44  1  0 #>                gear carb    scores #> Ferrari Dino      5    6 0.5771537 #> Datsun 710        4    1 0.5524719 #> Mazda RX4 Wag     4    4 0.5426933 #> Honda Civic       4    2 0.5410328 #> Hornet 4 Drive    3    1 0.5378022 plot(result)"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Multivariate.html","id":"notes-and-considerations-3","dir":"Articles","previous_headings":"iForest","what":"Notes and Considerations","title":"Multivariate","text":"Scalability: Isolation Forest designed handle large datasets efficiently, making suitable high-dimensional data. However, performance may depend ntrees parameter, higher values can increase computation time. Assumptions Data Distribution: Unlike statistical methods, iForest assume specific data distribution. makes robust detecting outliers diverse datasets. Handles Mixed Data Types: iForest can process numeric categorical variables. However, ensure data properly encoded formatted required isotree package. Interpretation Scores: Higher isolation scores indicate stronger anomalies. may need determine appropriate threshold dataset interpreting results. learn Isolation Forest ’s used multivariate outlier detection, visit resources: Medium.com iForest Explained Andy McDonald YouTube","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/qacOutliers.html","id":"what-are-outliers","dir":"Articles","previous_headings":"","what":"What are outliers?","title":"qacOutliers","text":"Outliers–also known anamolies, abnormalities, discordants, deviants–observations differ significantly rest observations dataset. many different reasons outliers can exist dataset, including natural variation population measurement error. Natural variations can seen many different ways. example, dataset people’s salaries includes random sample people, observations billionaires, much larger salary average person, distort data. Measurement experimental errors can occur data collection process. example, experiment recording people’s heights, measurement accidentally entered 52’ instead 5’2”, value outlier. isn’t person abnormally tall, height recorded incorrectly.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/qacOutliers.html","id":"how-can-you-detect-outliers-how-can-i-use-this-package-to-detect-outliers","dir":"Articles","previous_headings":"","what":"How can you detect outliers? How can I use this package to detect outliers?","title":"qacOutliers","text":"Detecting outliers, like many techniques data science, art science. many different reasons outliers exist, many different ways detect . package includes seven commonly used methods univariate multivariate outlier detection. See linked pages information specific methods. seven methods distinct methods identifying calculating outliers, ranging visualizing data standardizing calculating scores variable identify observations mathematically furthest away rest data. Although methods return observations classified outliers respective functions, ’s important always look underlying data understand picked outliers, truly outliers, might values .","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/qacOutliers.html","id":"why-should-we-detect-outliers","dir":"Articles","previous_headings":"","what":"Why should we detect outliers?","title":"qacOutliers","text":"many reasons outliers dataset, ’s always important take moment understand potential outliers within data. techniques utilize means heavily affected presence outliers, ’s extra important look outliers taking mean variables dataset. Additionally, outliers can generated measurement errors, provide context issues may arise data collection. findings especially helpful collecting data. aware issues data collection within datasets, techniques help identify points mistakes may made.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/qacOutliers.html","id":"what-should-you-do-with-outliers-once-you-detect-them","dir":"Articles","previous_headings":"","what":"What should you do with outliers once you detect them?","title":"qacOutliers","text":"depends many factors, including cause outlier (known), magnitude outlier, whether believe detected outliers truly outliers. many reasons outliers exist, detected outliers may really outliers, package allows decide want proceed. run one functions, can extract row numbers detected outliers carefully inspect data decide want detected outliers. example multivariate outliers detected LoF method, using mtcarsOutliers, dataset included package. LoF function detected nine outliers within dataset. output, can identify rows outliers , extract inspect observations. Looking dataset, can easily see lot detected outliers likely true outliers. values positive, negative values likely result measurement error can removed (takes Hornet Sportabout, Merc 280C, Merc 280, Merc 230, Toyota Corrolla, Volvo 142E). values look much larger , require closer look distributions values variables. better understood underlying data, can decide whether remove values data conducting analysis. example remove observations dataset. example also shows add score value multiOutliers function variable dataset.","code":"results <- multiOutliers(mtcarsOutliers, method = \"lof\") results #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: LoF #> Dataset: mtcarsOutliers #> Variables: mpg cyl disp hp drat wt qsec vs am gear carb #> Row: 1 2 3 4 6 7 10 11 15 16 17 20 24 26 27 29 30 31 32 #> Outlier Score: 1.234384 1.109279 1.052523 1.434807 1.590262 1.031151 1.000967 1.002118 1.004441 1.2053 1.015402 1.013044 1.088952 1.002205 1.043699 1.419062 1.752452 1.94842 1.017775 #> Message:  Outliers detected #> Option 1 : minPts = 10 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                     mpg cyl disp  hp      drat    wt  qsec vs am gear carb #> Maserati Bora  15.00000   8  301 335  3.540000 3.570 14.60  0  1    5    8 #> Ferrari Dino   19.70000   6  145 175 -5.146597 2.770 15.50  0  1    5    6 #> Valiant        18.10000   6  225 105  2.760000 3.460 20.22  1  0    3    1 #> Hornet 4 Drive 54.27716   6  258 110  3.080000 3.215 19.44  1  0    3    1 #> Ford Pantera L 15.80000   8  351 264  4.220000 3.170 14.50  0  1    5    4 #>                  scores #> Maserati Bora  1.948420 #> Ferrari Dino   1.752452 #> Valiant        1.590262 #> Hornet 4 Drive 1.434807 #> Ford Pantera L 1.419062 index <- results$Row subset <- mtcarsOutliers[index,] subset #>                          mpg cyl      disp        hp      drat       wt #> Mazda RX4           21.00000   6  782.5020  110.0000  3.900000  2.62000 #> Mazda RX4 Wag       52.22202   6  160.0000  110.0000  3.555697  2.87500 #> Datsun 710          22.80000   4 -468.2171   93.0000  3.850000 13.16772 #> Hornet 4 Drive      54.27716   6  258.0000  110.0000  3.080000  3.21500 #> Valiant             18.10000   6  225.0000  105.0000  2.760000  3.46000 #> Duster 360          14.30000   8  360.0000  245.0000  3.210000  3.57000 #> Merc 280            19.20000   6  167.6000  123.0000  3.920000  3.44000 #> Merc 280C           17.80000   6  167.6000  123.0000  3.920000  3.44000 #> Cadillac Fleetwood  10.40000   8  472.0000  205.0000  2.930000  5.25000 #> Lincoln Continental 10.40000   8  460.0000 -232.3693  3.000000  5.42400 #> Chrysler Imperial   14.70000   8  440.0000  230.0000  3.230000  5.34500 #> Toyota Corolla      33.90000   4   71.1000   65.0000  4.220000 10.24470 #> Camaro Z28          13.30000   8  350.0000  245.0000  3.730000  3.84000 #> Fiat X1-9           27.30000   4   79.0000   66.0000  4.080000  1.93500 #> Porsche 914-2       26.00000   4  120.3000   91.0000  4.430000  2.14000 #> Ford Pantera L      15.80000   8  351.0000  264.0000  4.220000  3.17000 #> Ferrari Dino        19.70000   6  145.0000  175.0000 -5.146597  2.77000 #> Maserati Bora       15.00000   8  301.0000  335.0000  3.540000  3.57000 #> Volvo 142E          21.40000   4  121.0000  109.0000  4.110000  2.78000 #>                         qsec vs am gear carb #> Mazda RX4           16.46000  0  1    4    4 #> Mazda RX4 Wag       17.02000  0  1    4    4 #> Datsun 710          18.61000  1  1    4    1 #> Hornet 4 Drive      19.44000  1  0    3    1 #> Valiant             20.22000  1  0    3    1 #> Duster 360          15.84000  0  0    3    4 #> Merc 280            18.30000  1  0    4    4 #> Merc 280C           18.90000  1  0    4    4 #> Cadillac Fleetwood  17.98000  0  0    3    4 #> Lincoln Continental 17.82000  0  0    3    4 #> Chrysler Imperial   17.42000  0  0    3    4 #> Toyota Corolla      19.90000  1  1    4    1 #> Camaro Z28          27.92358  0  0    3    4 #> Fiat X1-9           18.90000  1  1    4    1 #> Porsche 914-2       16.70000  0  1    5    2 #> Ford Pantera L      14.50000  0  1    5    4 #> Ferrari Dino        15.50000  0  1    5    6 #> Maserati Bora       14.60000  0  1    5    8 #> Volvo 142E          18.60000  1  1    4    2 #adding the scores from the multiOutliers function  mtcarsOutliers$results <- results$Data$scores  #identfying all rows with outliers index <- results$Row  #creating a new dataset with no outliers noOutliers <- mtcarsOutliers[-index,] noOutliers #>                    mpg cyl  disp        hp drat    wt      qsec vs am gear carb #> Hornet Sportabout 18.7   8 360.0  175.0000 3.15 3.440 17.020000  0  0    3    2 #> Merc 240D         24.4   4 146.7   62.0000 3.69 3.190 20.000000  1  0    4    2 #> Merc 230          22.8   4 140.8   95.0000 3.92 3.150  3.655936  1  0    4    2 #> Merc 450SE        16.4   8 275.8  180.0000 3.07 4.070 17.400000  0  0    3    3 #> Merc 450SL        17.3   8 275.8  180.0000 3.07 3.730 17.600000  0  0    3    3 #> Merc 450SLC       15.2   8 275.8  180.0000 3.07 3.780 18.000000  0  0    3    3 #> Fiat 128          32.4   4  78.7   66.0000 4.08 2.200 19.470000  1  1    4    1 #> Honda Civic       30.4   4  75.7 -240.5539 4.93 1.615 18.520000  1  1    4    2 #> Toyota Corona     21.5   4 120.1   97.0000 3.70 2.465 20.010000  1  0    3    1 #> Dodge Challenger  15.5   8 318.0  150.0000 2.76 3.520 16.870000  0  0    3    2 #> AMC Javelin       15.2   8 304.0  150.0000 3.15 3.435 17.300000  0  0    3    2 #> Pontiac Firebird  19.2   8 400.0  175.0000 3.08 3.845 17.050000  0  0    3    2 #> Lotus Europa      30.4   4  95.1  113.0000 3.77 1.513 16.900000  1  1    5    2 #>                     results #> Hornet Sportabout 0.9744176 #> Merc 240D         0.9703185 #> Merc 230          0.9503363 #> Merc 450SE        0.9800422 #> Merc 450SL        0.9766975 #> Merc 450SLC       0.9820844 #> Fiat 128          0.9976800 #> Honda Civic       0.9855085 #> Toyota Corona     0.9887988 #> Dodge Challenger  0.9778405 #> AMC Javelin       0.9744176 #> Pontiac Firebird  0.9795969 #> Lotus Europa      0.9623460"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Univariate.html","id":"what-are-univariate-outliers-how-do-you-detect-them","dir":"Articles","previous_headings":"","what":"What are univariate outliers? How do you detect them?","title":"Univariate","text":"Univariate outliers data points consisting extreme value one variable. values lie far dataset’s central tendency. graphical example univariate outlier mtcars dataset included base R. outlier shown red.  many different methods can used detect univariate outliers, package detects univariate outliers using following three methods: boxplot method, median absolute outlier detection, Grubb’s test. function detects outliers specified column(s) provides following output: (1) value detected outliers corresponding row numbers. (2) graphical visualization showing distribution data outliers highlighted according selected method.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/articles/Univariate.html","id":"boxplot-method","dir":"Articles","previous_headings":"","what":"Boxplot Method","title":"Univariate","text":"boxplot method univariate outlier detection identifies extreme data points examining distribution values using boxplot. method, “whiskers” boxplot represent range typical values within dataset. function, outliers defined values fall outside whiskers, calculated Q1−1.58×IQR lower bound Q3+1.58×IQR upper bound, Q1 Q3 first third quartiles, respectively, IQR interquartile range (difference Q3 Q1) allow broader range different threshold detecting extreme values. 1.58 length whiskers multiple IQR. method helps quickly identify potential outliers, plotted individually can indicate unusual problematic data points may warrant investigation. example boxplot method univariate outliers action using mtcarsOutliers dataset included package. first assign output uniOutliers function variable named “object”. print function used obtain list outliers detected boxplot method along corresponding row numbers. plot function used visualize outliers detected boxplot method. graphical representation generated outliers highlighted red.","code":"object <- uniOutliers(mtcarsOutliers, x=\"disp\", method = \"boxplot\") print(object) #>  #> ── Method Chosen: boxplot ────────────────────────────────────────────────────── #> Variable: disp #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      1           782.5020     #>      3           -468.2171 plot(object)"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Univariate.html","id":"mad","dir":"Articles","previous_headings":"","what":"MAD","title":"Univariate","text":"MAD (Median Absolute Deviation) method univariate outlier detection identifies outliers based robust measure variability, median absolute deviation. visualization method, red line represents median values target vector. upper CI limit median + 3MAD lower CI limit median - 3MAD. points outside confidence interval outliers detected MAD method. example MAD method univariate outliers action using mtcarsOutliers dataset included package. first assign output uniOutliers fcn variable named “object”. use print function obtain list outliers detected MAD method along corresponding row numbers. use plot function visualize outliers detected MAD method. Note points highlighted red outliers detected MAD method.","code":"object <- uniOutliers(mtcarsOutliers, x=\"disp\", method = \"mad\") print(object) #>  #> ── Method Chosen: mad ────────────────────────────────────────────────────────── #> Variable: disp #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      1           782.5020     #>      3           -468.2171 plot(object)"},{"path":"https://github.com/chenning2011/qacOutliers/articles/Univariate.html","id":"grubbs-test","dir":"Articles","previous_headings":"","what":"Grubb’s Test","title":"Univariate","text":"Grubbs’ Test simple technique iteratively identifies outliers testing hypothesis largest smallest value outlier. Grubbs’ test requires data normally distributed. example Grubbs method univariate outliers using randomly generated normally distributed dataset, clear outlier. first assign output uniOutliers fcn variable named “object_normal_outlier”. plot object using qq plot print results.  example Grubbs method univariate outliers using mtcarsOutliers dataset included package. first assign output uniOutliers fcn variable named “object3”. plot object using qq plot print results.  output Grubbs’ test provide identified outliers corresponding row numbers. method uses Shapiro-Wilk test (shapiro.test) normality. p-value normality test less 0.05, issues warning normality high p-value affect accuracy Grubbs’ Test.","code":"# TO TEST NORMAL DIST W OUTLIER FOR GRUBBS object_normal_outlier <- uniOutliers(data = grubbsOutlier, x = \"values\", method = \"grubbs\") print(object_normal_outlier)  # Printing the outliers and methods #>  #> ── Method Chosen: grubbs ─────────────────────────────────────────────────────── #> Variable: values #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>     101             70 plot(object_normal_outlier)  # Plotting the object with the outlier object3 <- uniOutliers(data = mtcars, x = \"carb\", method = \"grubbs\") #> Warning: Data is not normally distributed for carb. Grubbs' test may not be #> appropriate. print(object3)  # Printing the outliers and methods #>  #> ── Method Chosen: grubbs ─────────────────────────────────────────────────────── #> Variable: carb #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      31              8 plot(object3)  # Plotting the object with 'mtcars' dataset"},{"path":"https://github.com/chenning2011/qacOutliers/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Caleb Henning. Author, maintainer. Larissa Xu. Author. Angelica Crown. Author. Ernie Little. Author. Braeden Falzarano. Author. Ral Reyes. Author. Tegh Singh. Author.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Henning C, Xu L, Crown , Little E, Falzarano B, Reyes R, Singh T (2024). qacOutliers: Identification Multivariate Univariate Outliers. R package version 0.0.0.9000, https://github.com/chenning2011/qacOutliers.","code":"@Manual{,   title = {qacOutliers: Identification of Multivariate and Univariate Outliers},   author = {Caleb Henning and Larissa Xu and Angelica Crown and Ernie Little and Braeden Falzarano and Ral Reyes and Tegh Singh},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://github.com/chenning2011/qacOutliers}, }"},{"path":"https://github.com/chenning2011/qacOutliers/index.html","id":"qacoutliers","dir":"","previous_headings":"","what":"Identification of Multivariate and Univariate Outliers","title":"Identification of Multivariate and Univariate Outliers","text":"goal qacOutliers detect univariate multivariate outliers variety methods. package consolidates methods range R packages makes easily accessible. Additionally, original methods visualizing results provided.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Identification of Multivariate and Univariate Outliers","text":"can install development version qacOutliers GitHub :","code":"# install.packages(\"remotes\") remotes::install_github(\"https://github.com/chenning2011/qacOutliers/\")"},{"path":"https://github.com/chenning2011/qacOutliers/index.html","id":"how-to-use","dir":"","previous_headings":"","what":"How to use","title":"Identification of Multivariate and Univariate Outliers","text":"learn use package, outliers , different functions available package, visit Getting Started, Multivariate, Univariate vignettes. can find specific functions work Documentation page.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 Caleb Henning, Tegh Singh, Larissa Xu, Angelica Crown, Ernie Little, Ral Reyes, Braeden Falzarano Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/grubbsOutlier.html","id":null,"dir":"Reference","previous_headings":"","what":"grubbsOutlier — grubbsOutlier","title":"grubbsOutlier — grubbsOutlier","text":"Randomly generated, normally distributed data can used Grubbs test outliers.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/grubbsOutlier.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"grubbsOutlier — grubbsOutlier","text":"","code":"grubbsOutlier"},{"path":"https://github.com/chenning2011/qacOutliers/reference/grubbsOutlier.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"grubbsOutlier — grubbsOutlier","text":"data frame 101 rows 1 variables: values double. randomly generated values outliers","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/grubbsOutlier.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"grubbsOutlier — grubbsOutlier","text":"Generated using rnorm function mean 50 standard deviation 5. One outlier added data.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/irisOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"iris dataset with outliers — irisOutliers","title":"iris dataset with outliers — irisOutliers","text":"iris dataset base R generated outliers","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/irisOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"iris dataset with outliers — irisOutliers","text":"","code":"irisOutliers"},{"path":"https://github.com/chenning2011/qacOutliers/reference/irisOutliers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"iris dataset with outliers — irisOutliers","text":"data frame 150 rows 5 variables: Sepal.Length double. Sepal length irises. Sepal.Width double. Sepal width irises. Petal.Length double. Petal length irises. Petal.Width double. Petal width irises. Species integer. Species irises.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/irisOutliers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"iris dataset with outliers — irisOutliers","text":"iris dataset base R generated outliers. Outliers generated using generateOutliers function outForest package.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/mtcarsOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"mtcars dataset from base R with outliers — mtcarsOutliers","title":"mtcars dataset from base R with outliers — mtcarsOutliers","text":"Modified version mtcars generated outliers.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/mtcarsOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"mtcars dataset from base R with outliers — mtcarsOutliers","text":"","code":"mtcarsOutliers"},{"path":"https://github.com/chenning2011/qacOutliers/reference/mtcarsOutliers.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"mtcars dataset from base R with outliers — mtcarsOutliers","text":"data frame 32 rows 11 variables: mpg double. miles per gallon cyl factor number cylinders disp double. displacement (cu..) hp double. gross horsepower drat double. rear axle ratio wt double. weight (1000 lbs) qsec double. 1/4 mile time vs factor engine (0 = v-shaped, 1 = straight) factor transmission (0 = automatic, 1 = manual) gear factor number forward gears carb factor number carburetors","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/mtcarsOutliers.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"mtcars dataset from base R with outliers — mtcarsOutliers","text":"mtcars dataset comes base R. Outliers generated using generateOutliers function outForest package.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/multiOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Multivariate Outlier Detection — multiOutliers","title":"Multivariate Outlier Detection — multiOutliers","text":"Identifies multivariate outliers using four different methods.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/multiOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Multivariate Outlier Detection — multiOutliers","text":"","code":"multiOutliers(   data,   varlist = names(data),   method = \"lof\",   minPts = 10,   k = 5,   threshold = 0.95,   alpha = 0.1,   ntrees = 100,   n = 5,   na.rm = TRUE )"},{"path":"https://github.com/chenning2011/qacOutliers/reference/multiOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Multivariate Outlier Detection — multiOutliers","text":"data data frame varlist list variables. variables can factor numeric. Categorical variables dropped using mahalanobis kNN methods. method character, supplies method used outlier detection. Methods LoF, kNN, mahalanobis, iForest. minPts (optional) numeric, minimum points used LoF outlier detection. Default value 5 k (optional) k value used kNN method outlier detection. Default value 5 threshold (optional) threshold used kNN outlier detection. Default value 0.95 alpha (optional) alpha used mahalanobis distance outlier detection. Default value 0.1 ntrees (optional) number trees used iForest outlier detection. Default value 100 n (optional) number points take outliers iForest outlier detection. Default value 5 na.rm (optional) logical, specifies whether remove NA values. Defaults TRUE. value TRUE, removes missing data listwise deletion.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/multiOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Multivariate Outlier Detection — multiOutliers","text":"method used, dataset used, variables used outliers detected, indices detected outliers, scores outliers, values optional parameters","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/multiOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Multivariate Outlier Detection — multiOutliers","text":"","code":"multiOutliers(mtcarsOutliers, method=\"mahalanobis\", alpha=0.1) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: mahalanobis #> Dataset: mtcarsOutliers #> Variables: mpg disp hp drat wt qsec #> Row: 3 4 9 16 19 20 24 30 #> Outlier Score: 21.23573 12.96992 17.48584 17.54522 11.54579 10.88054 11.19061 27.79833 #> Message:  Outliers detected #> Option 1 : alpha = 0.1 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                          mpg      disp        hp      drat       wt      qsec #> Ferrari Dino        19.70000  145.0000  175.0000 -5.146597  2.77000 15.500000 #> Datsun 710          22.80000 -468.2171   93.0000  3.850000 13.16772 18.610000 #> Lincoln Continental 10.40000  460.0000 -232.3693  3.000000  5.42400 17.820000 #> Merc 230            22.80000  140.8000   95.0000  3.920000  3.15000  3.655936 #> Hornet 4 Drive      54.27716  258.0000  110.0000  3.080000  3.21500 19.440000 #>                       scores #> Ferrari Dino        27.79833 #> Datsun 710          21.23573 #> Lincoln Continental 17.54522 #> Merc 230            17.48584 #> Hornet 4 Drive      12.96992 multiOutliers(mtcarsOutliers, method=\"lof\", minPts=5) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: LoF #> Dataset: mtcarsOutliers #> Variables: mpg cyl disp hp drat wt qsec vs am gear carb #> Row: 1 2 3 4 6 7 8 9 10 12 13 15 17 20 21 23 27 28 29 30 31 #> Outlier Score: 1.082034 1.130627 1.010103 1.040641 1.055219 1.004195 1.015205 1.119456 1.005825 1.004323 1.003283 1.108191 1.078186 1.010103 1.067969 1.009432 1.229526 1.040732 1.87695 1.21083 1.461643 #> Message:  Outliers detected #> Option 1 : minPts = 5 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                     mpg cyl  disp  hp      drat    wt  qsec vs am gear carb #> Ford Pantera L 15.80000   8 351.0 264  4.220000 3.170 14.50  0  1    5    4 #> Maserati Bora  15.00000   8 301.0 335  3.540000 3.570 14.60  0  1    5    8 #> Porsche 914-2  26.00000   4 120.3  91  4.430000 2.140 16.70  0  1    5    2 #> Ferrari Dino   19.70000   6 145.0 175 -5.146597 2.770 15.50  0  1    5    6 #> Mazda RX4 Wag  52.22202   6 160.0 110  3.555697 2.875 17.02  0  1    4    4 #>                  scores #> Ford Pantera L 1.876950 #> Maserati Bora  1.461643 #> Porsche 914-2  1.229526 #> Ferrari Dino   1.210830 #> Mazda RX4 Wag  1.130627 multiOutliers(mtcarsOutliers, method=\"knn\", k=5, threshold=.95) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: kNN #> Dataset: mtcarsOutliers #> Variables: mpg disp hp drat wt qsec #> Row: 1 3 16 #> Outlier Score: 389.3906 557.6478 403.178 #> Message:  Outliers detected #> Option 1 : k = 5 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                      mpg      disp        hp drat       wt  qsec   scores #> Datsun 710          22.8 -468.2171   93.0000 3.85 13.16772 18.61 557.6478 #> Lincoln Continental 10.4  460.0000 -232.3693 3.00  5.42400 17.82 403.1780 #> Mazda RX4           21.0  782.5020  110.0000 3.90  2.62000 16.46 389.3906 #> Honda Civic         30.4   75.7000 -240.5539 4.93  1.61500 18.52 312.8635 #> Maserati Bora       15.0  301.0000  335.0000 3.54  3.57000 14.60 122.3927 multiOutliers(mtcarsOutliers, method=\"iforest\", ntrees = 50) #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: iForest #> Dataset: mtcarsOutliers #> Variables: mpg cyl disp hp drat wt qsec vs am gear carb #> Row: 2 3 4 9 30 #> Outlier Score: 0.5650616 0.5595005 0.5532602 0.5499185 0.5368699 #> Message:  Outliers detected #> Option 1 : ntrees = 50 #> Option 2 : n = 5 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>                     mpg cyl      disp  hp      drat       wt      qsec vs am #> Ferrari Dino   19.70000   6  145.0000 175 -5.146597  2.77000 15.500000  0  1 #> Datsun 710     22.80000   4 -468.2171  93  3.850000 13.16772 18.610000  1  1 #> Hornet 4 Drive 54.27716   6  258.0000 110  3.080000  3.21500 19.440000  1  0 #> Mazda RX4 Wag  52.22202   6  160.0000 110  3.555697  2.87500 17.020000  0  1 #> Merc 230       22.80000   4  140.8000  95  3.920000  3.15000  3.655936  1  0 #>                gear carb    scores #> Ferrari Dino      5    6 0.5650616 #> Datsun 710        4    1 0.5595005 #> Hornet 4 Drive    3    1 0.5532602 #> Mazda RX4 Wag     4    4 0.5499185 #> Merc 230          4    2 0.5368699"},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.multiOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Multivariate Outlier Detection — plot.multiOutliers","title":"Plotting Multivariate Outlier Detection — plot.multiOutliers","text":"Plots identified multivariate outliers using either kNN, iForest, mahalanobis, LoF","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.multiOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Multivariate Outlier Detection — plot.multiOutliers","text":"","code":"# S3 method for class 'multiOutliers' plot(x, ...)"},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.multiOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Multivariate Outlier Detection — plot.multiOutliers","text":"x results multivariate outlier detection function (e.g., kNN, iForest, mahalanobis, LoF) ... used","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.multiOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting Multivariate Outlier Detection — plot.multiOutliers","text":"formatted plot results multivariate outlier detection. Row indices x-axis ou","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.multiOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Multivariate Outlier Detection — plot.multiOutliers","text":"","code":"results <- multiOutliers(irisOutliers, method=\"iforest\") plot(results)   results <- multiOutliers(irisOutliers, method = \"knn\") plot(results)   results <- multiOutliers(irisOutliers, method = \"lof\") plot(results) #> Warning: ggrepel: 69 unlabeled data points (too many overlaps). Consider increasing max.overlaps   results <- multiOutliers(irisOutliers, method = \"mahalanobis\") plot(results)   plot(multiOutliers(irisOutliers, method = \"mahalanobis\"))"},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.uniOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Univariate Outlier Detection — plot.uniOutliers","title":"Plotting Univariate Outlier Detection — plot.uniOutliers","text":"Creates visualizations univariate outlier detection using method-specific plot styles.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.uniOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Univariate Outlier Detection — plot.uniOutliers","text":"","code":"# S3 method for class 'uniOutliers' plot(x, ...)"},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.uniOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Univariate Outlier Detection — plot.uniOutliers","text":"x list containing results univariate outlier detection function (e.g., univOutliers). ... used","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.uniOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting Univariate Outlier Detection — plot.uniOutliers","text":"plot object specific outlier detection method used (boxplot, MAD, Grubbs' test).","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.uniOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Univariate Outlier Detection — plot.uniOutliers","text":"","code":"object <- uniOutliers(data = mtcarsOutliers, x = \"wt\", method = \"mad\") plot(object)   object2 <- uniOutliers(data = mtcarsOutliers, x = \"wt\", method = \"boxplot\") plot(object2)   object3 <- uniOutliers(data = mtcarsOutliers, x = \"wt\", method = \"grubbs\") #> Warning: Data is not normally distributed for wt. Grubbs' test may not be appropriate. plot(object3)"},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.univOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Univariate Outlier Detection — plot.univOutliers","title":"Plotting Univariate Outlier Detection — plot.univOutliers","text":"Creates visualizations univariate outlier detection using method-specific plot styles.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.univOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Univariate Outlier Detection — plot.univOutliers","text":"","code":"# S3 method for class 'univOutliers' plot(outlier_results)"},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.univOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Univariate Outlier Detection — plot.univOutliers","text":"outlier_results list containing results univariate outlier detection function (e.g., univOutliers).","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.univOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting Univariate Outlier Detection — plot.univOutliers","text":"plot object specific outlier detection method used (boxplot, MAD, Grubbs' test).","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/plot.univOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Univariate Outlier Detection — plot.univOutliers","text":"","code":"object <- univOutliers(data = mtcarsOutliers, x = \"carb\", method = \"mad\") plot(object)   object2 <- univOutliers(data = mtcarsOutliers, x = \"wt\", method = \"boxplot\") plot(object2)   object3 <- univOutliers(data = mtcarsOutliers, x = \"carb\", method = \"grubbs\") #> Warning: Data is not normally distributed. Grubbs' test may not be appropriate. plot(object3)"},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.multiOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Multivariate Outlier Detection — print.multiOutliers","title":"Printing Multivariate Outlier Detection — print.multiOutliers","text":"Prints identified multivariate outliers","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.multiOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Multivariate Outlier Detection — print.multiOutliers","text":"","code":"# S3 method for class 'multiOutliers' print(x, ...)"},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.multiOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing Multivariate Outlier Detection — print.multiOutliers","text":"x results \"multiOutliers\" function ... used","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.multiOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing Multivariate Outlier Detection — print.multiOutliers","text":"formatted print results \"multiOutliers\" function","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.multiOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing Multivariate Outlier Detection — print.multiOutliers","text":"","code":"#iForest results <- multiOutliers(irisOutliers, method = \"iforest\") results #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: iForest #> Dataset: irisOutliers #> Variables: Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> Row: 30 111 112 130 134 #> Outlier Score: 0.665758 0.6534289 0.6319916 0.594985 0.5916989 #> Message:  Outliers detected #> Option 1 : ntrees = 100 #> Option 2 : n = 5 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>     Sepal.Length Sepal.Width Petal.Length Petal.Width   Species    scores #> 112    -5.041526    7.131942      5.30000    1.900000 virginica 0.6657580 #> 111    -2.897649    3.200000     15.39435    2.000000 virginica 0.6534289 #> 30      4.700000    3.200000      1.60000    5.593282    setosa 0.6319916 #> 134     6.300000   -5.515252      5.10000    1.500000 virginica 0.5949850 #> 130     7.200000    3.000000      5.80000   -1.069324 virginica 0.5916989  #LoF results <- multiOutliers(irisOutliers, method = \"lof\") results #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: LoF #> Dataset: irisOutliers #> Variables: Sepal.Length Sepal.Width Petal.Length Petal.Width Species #> Row: 2 4 5 6 7 9 10 11 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 33 34 37 38 39 41 42 43 44 45 46 47 48 49 51 52 53 54 56 57 58 59 60 61 62 63 64 66 67 68 69 70 71 73 74 75 77 78 79 80 81 82 84 85 86 87 88 91 94 95 98 99 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 122 123 124 126 128 130 131 132 133 134 135 136 137 138 141 143 145 147 149 #> Outlier Score: 1.019788 2.290435 1.01208 1.319469 1.157568 1.163526 1.107765 7.836175 1.122888 1.418387 1.463592 1.348545 1.245242 1.011556 1.364183 5.326338 1.110721 1.262949 1.365014 1.719472 1.15781 1.018937 7.643855 1.004589 18.77654 1.003236 1.318918 1.690833 1.387098 2.314559 1.253287 1.10076 1.076901 1.962892 1.164159 1.844472 6.450114 1.039996 10.00998 1.008459 1.065688 1.045434 1.006734 1.045816 1.030705 6.894673 1.097783 1.365682 1.024788 9.042709 1.418121 1.051193 1.205341 6.779096 1.013281 1.073393 1.098072 1.281698 1.000057 1.397777 3.101874 1.090035 2.939113 9.120049 3.301206 1.049308 1.158084 1.025154 1.201025 2.775807 1.192208 1.0945 1.024615 1.330552 1.023631 1.333208 1.001022 1.000872 2.960792 1.160506 1.014556 1.004692 3.707248 4.397371 1.145447 1.521473 1.110047 1.118297 1.284522 6.528664 8.473346 1.001691 1.069665 1.137508 1.015034 1.029831 1.315297 1.323921 1.347976 1.02192 1.117441 1.004525 1.207027 1.414737 5.857273 1.095101 1.238141 1.003124 7.119732 1.416955 1.15565 1.077401 3.219712 3.336054 1.014556 1.099708 1.01853 1.043832 #> Message:  Outliers detected #> Option 1 : minPts = 10 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    Species    scores #> 30      4.700000    3.200000     1.600000    5.593282     setosa 18.776542 #> 47     13.284890    3.800000     1.600000    0.200000     setosa 10.009984 #> 77      6.800000    2.800000    -8.799906    1.400000 versicolor  9.120049 #> 60      5.200000    2.700000    18.737610    1.400000 versicolor  9.042709 #> 112    -5.041526    7.131942     5.300000    1.900000  virginica  8.473346  #kNN results <- multiOutliers(irisOutliers, method = \"knn\") results #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: kNN #> Dataset: irisOutliers #> Variables: Sepal.Length Sepal.Width Petal.Length Petal.Width #> Row: 27 47 60 64 77 104 111 112 134 #> Outlier Score: 5.530942 7.280213 8.092378 5.331189 10.22672 4.959793 9.058028 9.24345 7.133188 #> Message:  Outliers detected #> Option 1 : k = 5 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>     Sepal.Length Sepal.Width Petal.Length Petal.Width    scores #> 77      6.800000    2.800000    -8.799906         1.4 10.226716 #> 112    -5.041526    7.131942     5.300000         1.9  9.243450 #> 111    -2.897649    3.200000    15.394346         2.0  9.058028 #> 60      5.200000    2.700000    18.737610         1.4  8.092378 #> 47     13.284890    3.800000     1.600000         0.2  7.280213  #Mahalanobis results <- multiOutliers(irisOutliers, method = \"mahalanobis\") results #>  #> ── Summary Information ───────────────────────────────────────────────────────── #>  #> Method: mahalanobis #> Dataset: irisOutliers #> Variables: Sepal.Length Sepal.Width Petal.Length Petal.Width #> Row: 11 20 27 30 45 47 56 60 64 77 104 105 111 112 130 134 138 #> Outlier Score: 8.155109 14.47815 37.83847 41.81264 11.15972 26.21562 12.26051 35.42845 12.70324 29.3269 13.30429 10.38707 42.30386 50.29761 14.22322 53.01116 8.450311 #> Message:  Outliers detected #> Option 1 : alpha = 0.1 #>  #> ── Dataset Information ───────────────────────────────────────────────────────── #>  #> Five Largest Outliers Within the Provided Dataset: #>     Sepal.Length Sepal.Width Petal.Length Petal.Width   scores #> 134     6.300000   -5.515252      5.10000    1.500000 53.01116 #> 112    -5.041526    7.131942      5.30000    1.900000 50.29761 #> 111    -2.897649    3.200000     15.39435    2.000000 42.30386 #> 30      4.700000    3.200000      1.60000    5.593282 41.81264 #> 27      5.000000   10.344843      1.60000    0.400000 37.83847"},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.uniOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Univariate Outlier Detection Results — print.uniOutliers","title":"Printing Univariate Outlier Detection Results — print.uniOutliers","text":"Prints identified univariate outliers using specified method (boxplot, MAD, Grubbs' test).","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.uniOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Univariate Outlier Detection Results — print.uniOutliers","text":"","code":"# S3 method for class 'uniOutliers' print(x, ...)"},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.uniOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing Univariate Outlier Detection Results — print.uniOutliers","text":"x results univariate outlier detection function (e.g., output uniOutliers). ... used","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.uniOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing Univariate Outlier Detection Results — print.uniOutliers","text":"formatted print outlier results, including detected outliers, row numbers, method used.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.uniOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing Univariate Outlier Detection Results — print.uniOutliers","text":"","code":"object <- uniOutliers(data = mtcars, x = \"wt\", method = \"mad\") print(object) #>  #> ── Method Chosen: mad ────────────────────────────────────────────────────────── #> Variable: wt #> ✔ No outliers detected.  object2 <- uniOutliers(data = mtcars, x = \"wt\", method = \"boxplot\") print(object2) #>  #> ── Method Chosen: boxplot ────────────────────────────────────────────────────── #> Variable: wt #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      16            5.424      #>      17            5.345       object3 <- uniOutliers(data = mtcars, x = \"wt\", method = \"grubbs\") print(object3) #>  #> ── Method Chosen: grubbs ─────────────────────────────────────────────────────── #> Variable: wt #> ✔ No outliers detected."},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.univOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Printing Univariate Outlier Detection Results — print.univOutliers","title":"Printing Univariate Outlier Detection Results — print.univOutliers","text":"Prints identified univariate outliers using specified method (boxplot, MAD, Grubbs' test).","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.univOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Printing Univariate Outlier Detection Results — print.univOutliers","text":"","code":"# S3 method for class 'univOutliers' print(x, ...)"},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.univOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Printing Univariate Outlier Detection Results — print.univOutliers","text":"x results univariate outlier detection function (e.g., output univOutliers).","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.univOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Printing Univariate Outlier Detection Results — print.univOutliers","text":"formatted print outlier results, including detected outliers, row numbers, method used.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/print.univOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Printing Univariate Outlier Detection Results — print.univOutliers","text":"","code":"object <- univOutliers(data = mtcars, x = \"carb\", method = \"mad\") print(object) #>  #> ── Method Chosen: mad ────────────────────────────────────────────────────────── #> Variable: carb #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      31              8         object2 <- univOutliers(data = mtcars, x = \"wt\", method = \"boxplot\") print(object2) #>  #> ── Method Chosen: boxplot ────────────────────────────────────────────────────── #> Variable: wt #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      16            5.424      #>      17            5.345       object3 <- univOutliers(data = mtcars, x = \"carb\", method = \"grubbs\") #> Warning: Data is not normally distributed. Grubbs' test may not be appropriate. print(object3) #>  #> ── Method Chosen: grubbs ─────────────────────────────────────────────────────── #> Variable: carb #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      31              8"},{"path":"https://github.com/chenning2011/qacOutliers/reference/qacOutliers-package.html","id":null,"dir":"Reference","previous_headings":"","what":"qacOutliers: Identification of Multivariate and Univariate Outliers — qacOutliers-package","title":"qacOutliers: Identification of Multivariate and Univariate Outliers — qacOutliers-package","text":"goal qacOutliers detect multivariate univariate outliers using seven different methods. package consolidates methods multiple different R packages makes easily accessible.","code":""},{"path":[]},{"path":"https://github.com/chenning2011/qacOutliers/reference/qacOutliers-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"qacOutliers: Identification of Multivariate and Univariate Outliers — qacOutliers-package","text":"Maintainer: Caleb Henning chenning@wesleyan.edu Authors: Larissa Xu lxu01@wesleyan.edu Angelica Crown acrown@wesleyan.edu Ernie Little elittle@wesleyan.edu Braeden Falzarano bfalzarano@wesleyan.edu Ral Reyes rreyes@wesleyan.edu Tegh Singh tsingh@wesleyan.edu","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/uniOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate Outlier Detection — uniOutliers","title":"Univariate Outlier Detection — uniOutliers","text":"Detects univariate outliers using boxplot, MAD, Grubbs' test.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/uniOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate Outlier Detection — uniOutliers","text":"","code":"uniOutliers(data, x = NULL, method = \"boxplot\")"},{"path":"https://github.com/chenning2011/qacOutliers/reference/uniOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate Outlier Detection — uniOutliers","text":"data data frame containing variable(s) analyzed x character, specifies column(s) assess outliers. NULL, numeric columns used method character, method used outlier detection: \"boxplot\", \"mad\", \"grubbs\" (default \"boxplot\")","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/uniOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Univariate Outlier Detection — uniOutliers","text":"list detected outliers, indices, method used, original dataset","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/uniOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate Outlier Detection — uniOutliers","text":"","code":"#Example usage: object <- uniOutliers(data = mtcarsOutliers, x=\"wt\", method = \"mad\") print(object)  # Printing the outliers and methods #>  #> ── Method Chosen: mad ────────────────────────────────────────────────────────── #> Variable: wt #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      3           13.16772     #>      20          10.24470      object2 <- uniOutliers(data = mtcarsOutliers, x= \"wt\", method = \"boxplot\") print(object2)  # Printing the outliers and methods #>  #> ── Method Chosen: boxplot ────────────────────────────────────────────────────── #> Variable: wt #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      3           13.16772     #>      16           5.42400     #>      20          10.24470      object3 <- uniOutliers(data = grubbsOutlier, method = \"grubbs\") print(object3)  # Printing the outliers and methods #>  #> ── Method Chosen: grubbs ─────────────────────────────────────────────────────── #> Variable: values #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>     101             70"},{"path":"https://github.com/chenning2011/qacOutliers/reference/univOutliers.html","id":null,"dir":"Reference","previous_headings":"","what":"Univariate Outlier Detection — univOutliers","title":"Univariate Outlier Detection — univOutliers","text":"Detects univariate outliers using boxplot, MAD, Grubbs' test.","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/univOutliers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Univariate Outlier Detection — univOutliers","text":"","code":"univOutliers(data, x = NULL, method = \"boxplot\")"},{"path":"https://github.com/chenning2011/qacOutliers/reference/univOutliers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Univariate Outlier Detection — univOutliers","text":"data data frame containing variable(s) analyzed x character, specifies column(s) assess outliers. NULL, numeric columns used method character, method used outlier detection: \"boxplot\", \"mad\", \"grubbs\" (default \"boxplot\")","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/univOutliers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Univariate Outlier Detection — univOutliers","text":"list detected outliers, indices, method used, original dataset","code":""},{"path":"https://github.com/chenning2011/qacOutliers/reference/univOutliers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Univariate Outlier Detection — univOutliers","text":"","code":"#Example usage: object <- univOutliers(data = mtcarsOutliers, x=\"carb\", method = \"mad\") print(object)  # Printing the outliers and methods #>  #> ── Method Chosen: mad ────────────────────────────────────────────────────────── #> Variable: carb #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      20          -7.344032    #>      31          8.000000     #>      32         -12.912355     object2 <- univOutliers(data = mtcarsOutliers, x= \"wt\", method = \"boxplot\") print(object2)  # Printing the outliers and methods #>  #> ── Method Chosen: boxplot ────────────────────────────────────────────────────── #> Variable: wt #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>      9           -4.541341     object3 <- univOutliers(data = grubbsOutlier, method = \"grubbs\") print(object3)  # Printing the outliers and methods #>  #> ── Method Chosen: grubbs ─────────────────────────────────────────────────────── #> Variable: values #>  #> Outliers Detected for: #>  #>  #>  Row Number    Outlier Value  #> ------------  --------------- #>     101             70"}]
